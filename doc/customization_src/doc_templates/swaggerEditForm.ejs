<!DOCTYPE html>
<html>

<head>
  <title>Dev Edit</title>
  <link rel="icon" type="image/png" href="https://creativefuel.io/assets/img/image20.png">
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      display: flex;
      height: 100vh;
    }

    .sidebar {
      width: 200px;
      background-image: url("https://img.freepik.com/free-vector/simple-blue-abstract-background-vector-business_53876-161575.jpg");
      /* Replace with your image path */
      background-size: cover;
      /* Cover the entire sidebar */
      background-position: center;
      /* Center the background image */
      color: white;
      padding: 20px;
      height: 740px;
    }

    .main {
      flex-grow: 1;
      padding: 20px;
      background: #f2f2f2;
    }

    .header {
      background-color: #013660;
      color: white;
      padding: 10px 20px;
      text-align: left;
    }

    .card {
      background: #fff;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      /* margin-bottom: 20px; */
    }

    .form-container {
      margin: auto;

      background: rgba(255, 255, 255, 0.8);
      /* Semi-transparent white */
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
      max-width: 400px;
      width: 100%;
      margin-bottom: 80px;
    }

    .form-field {
      margin-bottom: 30px;
    }

    .form-field input[type="text"],
    .form-field select {
      width: 100%;
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 4px;
      box-sizing: border-box;
    }

    .form-field label {
      display: block;
      margin-bottom: 5px;
      font-weight: bold;
    }

    .form-submit {
      padding: 10px 18px;
      margin-right: 5px;
      border-radius: 4px;
      border: none;
      background-color: #013660;
      color: #fff;
      font-size: 16px;
      cursor: pointer;
    }

    .form-submit:hover {
      background-color: rgb(81, 97, 181);
    }

    .sidebar-logo {
      text-align: center;
      margin-bottom: 20px;
    }

    .sidebar-logo img {
      max-width: 100%;
      /* Ensures the logo is responsive and fits the sidebar */
      height: auto;
    }

    .checkDevelopers {
      cursor: pointer;
    }

    .user-table {
      width: 100%;
      border-collapse: collapse;
    }

    .user-table th,
    .user-table td {
      border: 1px solid #ddd;
      padding: 8px;
      text-align: left;
    }

    .user-table th {
      background-color: #f4f4f4;
    }

    .action-buttons button {
      padding: 5px 10px;
      margin-right: 5px;
      border-radius: 4px;
      border: none;
      background-color: #4caf50;
      color: white;
      cursor: pointer;
    }

    .action-buttons button:hover {
      background-color: #45a049;
    }

    .cardInner {
      max-width: 800px;
      margin: 40px auto;
      padding: 20px;
      background: #fff;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .table-container {
      overflow-x: auto;
      /* Enable horizontal scrolling */
      margin-bottom: 20px;
      /* Add some space below the table */
    }

    .user-table {
      width: 100%;
      border-collapse: collapse;
    }

    .user-table th,
    .user-table td {
      border: 1px solid #ddd;
      padding: 8px;
      text-align: left;
    }

    .user-table th {
      background-color: #f4f4f4;
    }

    .checkDevelopers {
    /* Base styling */
    display: flex;
    align-items: center;
    padding: 10px 20px;
    margin: 5px;
    text-decoration: none;
    color: #fff;
    background-color: #013660;
    border: 2px solid transparent;
    border-radius: 5px;
    transition: all 0.3s ease;
    font-weight: bold;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.checkDevelopers i {
    margin-right: 10px; /* Adjust the spacing between icon and text */
}

.checkDevelopers:hover {
    /* Hover styling */
    background-color: rgb(81, 97, 181);
    color: #fff;
    border-color: rgb(81, 97, 181);
    transform: scale(1.05);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
}

.checkDevelopers:active {
    /* Active/Clicked styling */
    background-color: #001e36;
    color: #fff;
    border-color: #013660;
    transform: scale(0.95);
}
    .sidebar-links {
      margin-top: 200px;
      margin-left: 15px;
    }

    /* Style the dropdown container */
    #status,#accountVerification,
    #dept {
      background-color: #fff;
      /* White background */
      color: #333;
      /* Dark text color for contrast */
      padding: 10px 15px;
      /* Padding for a larger, more clickable area */
      border: 1px solid #007bff;
      /* Blue border */
      border-radius: 5px;
      /* Rounded corners */
      font-size: 16px;
      /* Slightly larger font size for readability */
      cursor: pointer;
      /* Change cursor to indicate it's a dropdown */
      outline: none;
      /* Remove default focus outline */
      -webkit-appearance: none;
      /* Remove default style in WebKit browsers */
      -moz-appearance: none;
      /* Remove default style in Firefox */
      appearance: none;
      /* Standard syntax to remove default style */
    }

    /* Style for the arrow indicator using Unicode character */
    #status,#accountVerification,
    #dept {
      background: url('data:image/svg+xml;utf8,<svg fill="black" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M7 10l5 5 5-5z"/></svg>') no-repeat right #fff;
      background-position-x: calc(100% - 10px);
      /* Position the arrow to the right */
      background-position-y: center;
      /* Center the arrow vertically */
    }

    /* Style for options */
    .dropdownCheck {
      background-color: #f8f9fa;
      color: #333;
    }

    /* Hover effects for options */
    .dropdownCheck:hover {
      background-color: #e9ecef;
      /* Slightly darker background on hover */
    }
    #resetFilterBtn, #logoutbtn, #adminprofilebtn {
        padding: 8px 17px;
        margin-top: 20px;
        background-color: #013660;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s;
      }

      #resetFilterBtn:hover {
        background-color: rgb(81, 97, 181);
      }
      #logoutbtn:hover {
        background-color: rgb(81, 97, 181);
      }
      #adminprofilebtn:hover {
        background-color: rgb(81, 97, 181);
      }
  </style>
</head>

<body>
  <div class="sidebar">
    <!-- Sidebar content -->
    <div class="sidebar-logo"></div>
    <div class="sidebar-links">
      <a href="/api-docs" class="checkDevelopers"> Documentation &nbsp;</a>
      <a href="/login-history" class="checkDevelopers">
        Login &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; <i class="fas fa-history"></i>
      </a>
      <a href="/doc-user" class="checkDevelopers"> Developer &nbsp; <i class="fas fa-check-circle"></i></a>
      <a href="/all-request" class="checkDevelopers"> Reequest &nbsp; &nbsp;<i class=" fas fa-bell"></i> </a>
      <a href="/rejected-dev" class="checkDevelopers"> Developer  &nbsp;<i class="fas fa-times-circle"></i> </a>
    </div>
    <img
      src="https://media.licdn.com/dms/image/C4D0BAQF6QHYd1myKyw/company-logo_200_200/0/1630521048751/creative_fuel_io_logo?e=2147483647&v=beta&t=E0hyxWgbSM42fPDcFCT-q7Y9LvSuysj-dLMWcVC1aSw"
      alt="CreativeFuel Logo"
      style="height: 200px;"
    />
    <hr />
  </div>
  <div class="main">
    <div class="header" style="display: flex; justify-content: space-between;">
      <h1>Update Developer Data</h1>
    </div>

    <div class="card">
      <div class="form-container">
        <form id="developerForm">
          <div class="form-field">
            <label for="email">Email:</label>
            <input type="text" required id="email" name="email" placeholder="Enter email" disabled />
            <div id="emailError" style="color: red; display: none; font-size: 12px">
              Please enter a valid email address.
            </div>
          </div>
          <div class="form-field">
            <label for="phone">Phone:</label>
            <input type="text" required id="phone" name="phone" placeholder="Enter phone number" />
            <div id="phoneError" style="color: red; display: none; font-size: 12px">
              Please enter a valid phone number.
            </div>
          </div>
          <div class="form-field">
            <label for="name">Name:</label>
            <input type="text" required id="name" name="name" placeholder="Enter name" />
          </div>

          <div class="form-field">
            <label for="dept">Department:</label>
            <select id="dept" name="department">
              <option value="Front-End" class="dropdownCheck">
                Front-End
              </option>
              <option value="Back-End" class="dropdownCheck">Back-End</option>
              <option value="Other" class="dropdownCheck">Other</option>
            </select>
          </div>
          <div class="form-field">
            <label for="status">Status:</label>
            <select id="status" name="status">
              <option value="Active" class="dropdownCheck">Active</option>
              <option value="Inactive" class="dropdownCheck">Inactive</option>
            </select>
          </div>
          <!-- <div class="form-field">
            <label for="accountVerification">Account Verification:</label>
            <select id="accountVerification" name="accountVerification">
              <option value=1 class="dropdownCheck">Verified</option>
              <option value=2 class="dropdownCheck">Rejected</option>
              <option value=0 class="dropdownCheck">Not verified</option>
            </select>
          </div> -->

          <input type="submit" value="Update" class="form-submit" />
        </form>
      </div>
    </div>
  </div>
  <script>
    const emailInput = document.getElementById("email");
    const emailError = document.getElementById("emailError");

    emailInput.addEventListener("input", function () {
      // Regular expression for validating email
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

      if (!emailRegex.test(emailInput.value)) {
        // Show error message if email is invalid
        emailError.style.display = "block";
      } else {
        // Hide error message if email is valid
        emailError.style.display = "none";
      }
    });
    const phoneInput = document.getElementById("phone");
    const phoneError = document.getElementById("phoneError");

    phoneInput.addEventListener("input", function (e) {
      // Check if the input value contains non-digit characters
      if (/\D/.test(e.target.value)) {
        // Show error message
        phoneError.style.display = "block";
      } else {
        // Hide error message
        phoneError.style.display = "none";
      }
    });
    // Get the token from the URL
    const urlParts = window.location.pathname.split("/");
    const token = urlParts[urlParts.length - 1];
    const developerId = urlParts[urlParts.length - 2];

    // Select the links by class
    const links = document.querySelectorAll(".checkDevelopers");

    // Append the token to each link
    links.forEach((link) => {
      link.href += "/" + token;
    });


    window.addEventListener("beforeunload", function (event) {
      // Call your logout API
      navigator.sendBeacon(`/doc-logout/${token}`); // Using sendBeacon for asynchronous request
    });

    let inactivityTime = function () {
      let time;
      window.onload = resetTimer;
      // Events that reset the timer
      document.onmousemove = resetTimer;
      document.onkeypress = resetTimer;

      function logout() {
        // Call your logout API
        fetch(`/doc-logout/${token}`, { method: "POST" }) // Replace with your actual logout API call
          .then(() => (window.location.href = `/doc-login`))
          .catch((err) => console.error("Error:", err));
      }

      function resetTimer() {
        clearTimeout(time);
        // Set timeout for 1 hour (1500000 ms)
        time = setTimeout(logout, 1500000);
      }
    };

    inactivityTime(); // Initialize the inactivity timer function
    // const developerId = /* get developer id from URL or other sources */
    const fetchDeveloperDataEndpoint = `/dev-data/${developerId}/${token}`;

    fetch(fetchDeveloperDataEndpoint)
      .then((response) => response.json())
      .then((data) => {
        if (data?.success) {
          document.getElementById("email").value = data.data.email;
          document.getElementById("phone").value = data.data.phone;
          document.getElementById("name").value = data.data.name;
          document.getElementById("dept").value = data.data.department;
          document.getElementById("status").value = data.data.status;
          // document.getElementById("accountVerification").value = String(data.data.isAdminVerified);
        } else {
          alert("Error fetching data: " + data?.message);
        }
      })
      .catch((error) => {
        alert("Error fetching developer data: " + error);
      });

    document
      .getElementById("developerForm")
      .addEventListener("submit", function (event) {
        event.preventDefault();

        const formData = {
          email: document.getElementById("email").value,
          phone: document.getElementById("phone").value,
          name: document.getElementById("name").value,
          status: document.getElementById("status").value,
          department: document.getElementById("dept").value,
          // isAdminVerified: document.getElementById("accountVerification").value,
        };

        fetch(`/dev-data-update/${developerId}/${token}`, {
          method: "PUT",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(formData),
        })
          .then((response) => response.json())
          .then((data) => {
            if (data?.success === false) {
              alert("Error while updating data :" + data?.message);
            } else {
              window.location.href = `/doc-user/${token}`;
            }
          })
          .catch((error) => {
            alert("Error while updating data :" + error);
          });
      });
  </script>
</body>

</html>